[{"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\index.js":"1","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\App.js":"2","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\ApolloProvider.js":"3","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Home.js":"4","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Login.js":"5","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Register.js":"6","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\MenuBar.js":"7","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostCard.js":"8","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\hooks.js":"9","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\context\\auth.js":"10","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\AuthRoute.js":"11","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostForm.js":"12","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\graphql.js":"13","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\LikeButton.js":"14","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\DeleteButton.js":"15","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\SinglePost.js":"16","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\index.js":"17","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\ApolloProvider.js":"18","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\App.js":"19","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\MenuBar.js":"20","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\context\\auth.js":"21","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Home.js":"22","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Login.js":"23","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\AuthRoute.js":"24","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Register.js":"25","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\SinglePost.js":"26","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostCard.js":"27","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\hooks.js":"28","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\DeleteButton.js":"29","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostForm.js":"30","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\graphql.js":"31","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\LikeButton.js":"32","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\MyPopup.js":"33","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\MyPopup.js":"34"},{"size":230,"mtime":1607252211280,"results":"35","hashOfConfig":"36"},{"size":933,"mtime":1608309195685,"results":"37","hashOfConfig":"36"},{"size":697,"mtime":1607466958828,"results":"38","hashOfConfig":"36"},{"size":1388,"mtime":1607700558857,"results":"39","hashOfConfig":"36"},{"size":2577,"mtime":1607416566745,"results":"40","hashOfConfig":"36"},{"size":3446,"mtime":1607416566748,"results":"41","hashOfConfig":"36"},{"size":1705,"mtime":1607418082925,"results":"42","hashOfConfig":"36"},{"size":1586,"mtime":1608402983213,"results":"43","hashOfConfig":"36"},{"size":448,"mtime":1607367480866,"results":"44","hashOfConfig":"36"},{"size":1508,"mtime":1607417999588,"results":"45","hashOfConfig":"36"},{"size":475,"mtime":1607419770763,"results":"46","hashOfConfig":"36"},{"size":2498,"mtime":1607690046480,"results":"47","hashOfConfig":"36"},{"size":345,"mtime":1607509286224,"results":"48","hashOfConfig":"36"},{"size":1710,"mtime":1608403475131,"results":"49","hashOfConfig":"36"},{"size":2443,"mtime":1608402848633,"results":"50","hashOfConfig":"36"},{"size":6756,"mtime":1608403299972,"results":"51","hashOfConfig":"36"},{"size":230,"mtime":1607252211280,"results":"52","hashOfConfig":"53"},{"size":697,"mtime":1607466958828,"results":"54","hashOfConfig":"53"},{"size":933,"mtime":1608309195685,"results":"55","hashOfConfig":"53"},{"size":1705,"mtime":1607418082925,"results":"56","hashOfConfig":"53"},{"size":1508,"mtime":1607417999588,"results":"57","hashOfConfig":"53"},{"size":1388,"mtime":1607700558857,"results":"58","hashOfConfig":"53"},{"size":2577,"mtime":1607416566745,"results":"59","hashOfConfig":"53"},{"size":475,"mtime":1607419770763,"results":"60","hashOfConfig":"53"},{"size":3446,"mtime":1607416566748,"results":"61","hashOfConfig":"53"},{"size":6756,"mtime":1608403299972,"results":"62","hashOfConfig":"53"},{"size":1586,"mtime":1608402983213,"results":"63","hashOfConfig":"53"},{"size":448,"mtime":1607367480866,"results":"64","hashOfConfig":"53"},{"size":2443,"mtime":1608402848633,"results":"65","hashOfConfig":"53"},{"size":2498,"mtime":1607690046480,"results":"66","hashOfConfig":"53"},{"size":345,"mtime":1607509286224,"results":"67","hashOfConfig":"53"},{"size":1710,"mtime":1608403475131,"results":"68","hashOfConfig":"53"},{"size":212,"mtime":1608402532546,"results":"69","hashOfConfig":"53"},{"size":212,"mtime":1608402532546,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1xtgsq9",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"73"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ljn2t",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\index.js",[],["146","147"],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\App.js",["148"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react'\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nimport { AuthProvider } from './context/auth';\nimport AuthRoute from './util/AuthRoute';\n\nimport MenuBar from './components/MenuBar';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport SinglePost from './pages/SinglePost';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n      <div className=\"ui container\">\n        <MenuBar />\n        <Route exact path='/' component={Home} />\n        <AuthRoute exact path='/login' component={Login} />\n        <AuthRoute exact path='/register' component={Register} />\n        <Route exact path=\"/posts/:postId\" component={SinglePost} />\n      </div>\n    </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\ApolloProvider.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Home.js",["149","150"],"import React, { useContext } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { Grid, Transition } from 'semantic-ui-react';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\n\r\nfunction Home() {  \r\n    const { user } = useContext(AuthContext);    \r\n    const { \r\n        loading,\r\n        error,\r\n        data\r\n    } = useQuery(FETCH_POSTS_QUERY);\r\n    \r\n    return (\r\n    <Grid columns={3}>\r\n        <Grid.Row className=\"page-title\">\r\n          <h1>Recent Posts</h1>\r\n        </Grid.Row>\r\n    \r\n        <Grid.Row>\r\n            {user && (\r\n                <Grid.Column>\r\n                    <PostForm />\r\n                </Grid.Column>\r\n            )}\r\n            {loading ? (\r\n                <h1>Loading posts...</h1>\r\n            ) : (\r\n                <Transition.Group>\r\n                    {data.getPosts &&\r\n                    data.getPosts.map((post) => (\r\n                        <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\r\n                            <PostCard post={post} />\r\n                        </Grid.Column>\r\n                    ))}\r\n                </Transition.Group>\r\n            )}\r\n        </Grid.Row>\r\n    </Grid>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Login.js",["151"],"import React, { useContext, useState } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport { useForm } from '../util/hooks';\r\n\r\nfunction Login(props) {\r\n    const context = useContext(AuthContext);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n        update(_, { data: { login: userData }}) {\r\n            context.login(userData);\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    function loginUserCallback() {\r\n        loginUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate>\r\n                <h1>Login</h1>\r\n                <Form.Input\r\n                label=\"Username\"\r\n                placeholder=\"Username...\"\r\n                name=\"username\"\r\n                type=\"text\"\r\n                value={values.username}\r\n                error={errors.username ? true : false}\r\n                onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                label=\"Password\"\r\n                placeholder=\"Password...\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                error={errors.password ? true : false}\r\n                onChange={onChange}\r\n                />\r\n                <Button type=\"submit\" primary>\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                    {Object.values(errors).map(value => (\r\n                        <li key={value}>{value}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\n    mutation register(\r\n        $username: String!\r\n        $password: String!\r\n    ) {\r\n        login(\r\n            username: $username\r\n            password: $password\r\n        ) {\r\n            id \r\n            email \r\n            username \r\n            createdAt \r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Login;","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Register.js",["152"],"import React, { useContext, useState } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { useForm } from '../util/hooks';\r\n\r\nfunction Register(props) {\r\n    const context = useContext(AuthContext);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const { onChange, onSubmit, values } = useForm(registerUser, {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n        update(_, { data: { register: userData }}) {\r\n            context.login(userData);\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    function registerUser() {\r\n        addUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Form onSubmit={onSubmit} noValidate>\r\n                <h1>Register</h1>\r\n                <Form.Input\r\n                label=\"Username\"\r\n                placeholder=\"Username...\"\r\n                name=\"username\"\r\n                type=\"text\"\r\n                value={values.username}\r\n                error={errors.username ? true : false}\r\n                onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                label=\"Email\"\r\n                placeholder=\"Email...\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={values.email}\r\n                error={errors.email ? true : false}\r\n                onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                label=\"Password\"\r\n                placeholder=\"Password...\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                error={errors.password ? true : false}\r\n                onChange={onChange}\r\n                />\r\n                <Form.Input\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm Password...\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={values.confirmPassword}\r\n                error={errors.confirmPassword ? true : false}\r\n                onChange={onChange}\r\n                />\r\n                <Button type=\"submit\" primary>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                    {Object.values(errors).map(value => (\r\n                        <li key={value}>{value}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n    mutation register(\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n        $confirmPassword: String!\r\n    ) {\r\n        register(\r\n            registerInput: {\r\n                username: $username\r\n                email: $email\r\n                password: $password\r\n                confirmPassword: $confirmPassword\r\n            }\r\n        ) {\r\n            id email username createdAt token\r\n        }\r\n    }\r\n`\r\n\r\nexport default Register;","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\MenuBar.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostCard.js",["153"],"import React, { useContext } from 'react'\r\nimport { Card, Image, Icon, Label, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { AuthContext } from '../context/auth';\r\nimport LikeButton from './LikeButton';\r\nimport DeleteButton from './DeleteButton';\r\nimport MyPopup from '../util/MyPopup';\r\n\r\n\r\nfunction PostCard({post: { body, createdAt, id, username, likeCount, commentCount, likes }}) {\r\n    const { user } = useContext(AuthContext)\r\n\r\n    return (\r\n    <Card fluid>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/molly.png'\r\n        />\r\n        <Card.Header as={Link} to={`/posts/${id}`}>{username}</Card.Header>\r\n        <Card.Meta>{moment(createdAt).fromNow(true)}</Card.Meta>\r\n        <Card.Description>{body}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <LikeButton user={user} post={{ id, likes, likeCount }}/>\r\n        <MyPopup content=\"Comment on post\">\r\n          <Button as='div' labelPosition='right' as={Link} to={`/posts/${id}`}>\r\n              <Button color='blue' basic>\r\n                  <Icon name='comments' />\r\n              </Button>\r\n              <Label basic color='blue' pointing='left'>\r\n                  {commentCount}\r\n              </Label>\r\n            </Button>\r\n        </MyPopup> \r\n        {user && user.username === username && <DeleteButton postId={id} />}\r\n      </Card.Content>\r\n    </Card>\r\n    \r\n    );\r\n}\r\n\r\nexport default PostCard;\r\n","C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\hooks.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\context\\auth.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\AuthRoute.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostForm.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\graphql.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\LikeButton.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\DeleteButton.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\SinglePost.js",["154"],"import React, {useContext, useState, useRef} from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Button, Card, Form, Grid, Image, Icon, Label } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport LikeButton from '../components/LikeButton';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport MyPopup from '../util/MyPopup';\r\n\r\n\r\n\r\nfunction SinglePost(props) {\r\n    const postId = props.match.params.postId;\r\n    const { user } = useContext(AuthContext);\r\n    const commentInputRef = useRef(null);\r\n\r\n    const [comment, setComment] = useState('');\r\n\r\n    const { \r\n        loading,\r\n        error,\r\n        data\r\n    } = useQuery(FETCH_POST_QUERY, {\r\n        variables: { postId }\r\n    });\r\n\r\n    const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\r\n        update() {\r\n            setComment('');\r\n            commentInputRef.current.blur(); // This blur the input comment when we submit one, this means it quits the focus\r\n        },\r\n        variables: {\r\n            postId,\r\n            body: comment\r\n        }\r\n    });\r\n\r\n    function deletePostCallback() {\r\n        props.history.push('/');\r\n    }\r\n\r\n    let postMarkup;\r\n    if (loading) {\r\n        postMarkup = <p>Loading post...</p>\r\n    } else {\r\n        const { id, body, createdAt, username, comments, likes, likeCount, commentCount } = data.getPost;\r\n\r\n\r\n        postMarkup = (\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column width={2}>\r\n                        <Image \r\n                            src='https://react.semantic-ui.com/images/avatar/large/molly.png'\r\n                            size=\"small\"\r\n                            float=\"right\" \r\n                        />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={10}>\r\n                        <Card fluid>\r\n                            <Card.Content>\r\n                                <Card.Header>{username}</Card.Header>\r\n                                <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\r\n                                <Card.Description>{body}</Card.Description>\r\n                            </Card.Content>\r\n                            <hr/>\r\n                            <Card.Content extra>\r\n                                <LikeButton user={user} post={{ id, likeCount, likes }}/>\r\n                                <MyPopup content=\"Comment on post\">\r\n                                    <Button \r\n                                    as=\"div\"\r\n                                    labelPosition=\"right\"\r\n                                    onClick={() => console.log('Comment on post')}\r\n                                    >\r\n                                    <Button color='blue' basic>\r\n                                        <Icon name='comments' />\r\n                                    </Button>\r\n                                    <Label basic color='blue' pointing='left'>\r\n                                        {commentCount}\r\n                                    </Label>\r\n                                    </Button>\r\n                                </MyPopup> \r\n                                {user && user.username === username && (\r\n                                    <DeleteButton postId={id} callback={deletePostCallback}/>\r\n                                )}\r\n                            </Card.Content>\r\n                        </Card>\r\n                        {user && (\r\n                            <Card fluid>\r\n                                <Card.Content>\r\n                                    <p>Post a comment</p>\r\n                                    <Form>\r\n                                        <div className=\"ui action input fluid\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Comment...\"\r\n                                                name=\"comment\"\r\n                                                value={comment}\r\n                                                onChange={event => setComment(event.target.value)}\r\n                                                ref={commentInputRef}\r\n                                            />\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                className=\"ui button teal\"\r\n                                                disable={comment.trim() === ''}\r\n                                                onClick={submitComment}\r\n                                            >\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        )}\r\n                        {comments.map(comment => (\r\n                            <Card fluid key={comment.id}>\r\n                                <Card.Content>\r\n                                    {user && user.username === comment.username && (\r\n                                        <DeleteButton postId={id} commentId={comment.id} />\r\n                                    )}\r\n                                    <Card.Header>{username}</Card.Header>\r\n                                    <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\r\n                                    <Card.Description>{comment.body}</Card.Description>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n    return postMarkup;\r\n}\r\n\r\nconst SUBMIT_COMMENT_MUTATION = gql`\r\n    mutation($postId: ID!, $body: String!) {\r\n        createComment(postId: $postId, body: $body) {\r\n            id\r\n            comments {\r\n                id\r\n                body\r\n                createdAt\r\n            }\r\n            commentCount\r\n        }\r\n    }\r\n`;\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n    query($postId: ID!) {\r\n        getPost(postId: $postId) {\r\n            body \r\n            id \r\n            createdAt \r\n            username \r\n            likeCount\r\n            likes {\r\n                username\r\n            }\r\n            commentCount\r\n            comments {\r\n                id \r\n                username \r\n                createdAt \r\n                body\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default SinglePost;\r\n","c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\index.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\ApolloProvider.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\App.js",["155"],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\MenuBar.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\context\\auth.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Home.js",["156","157"],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Login.js",["158"],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\AuthRoute.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\Register.js",["159"],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\pages\\SinglePost.js",["160"],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostCard.js",["161"],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\hooks.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\DeleteButton.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\PostForm.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\graphql.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\components\\LikeButton.js",[],"c:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\MyPopup.js",[],"C:\\Users\\manuel\\Desktop\\workspace\\Full-Stack\\MERN-Stack\\merng-social-network\\client\\src\\util\\MyPopup.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"166","severity":1,"message":"170","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":11},{"ruleId":"166","severity":1,"message":"171","line":15,"column":9,"nodeType":"168","messageId":"169","endLine":15,"endColumn":14},{"ruleId":"166","severity":1,"message":"172","line":18,"column":25,"nodeType":"168","messageId":"169","endLine":18,"endColumn":32},{"ruleId":"166","severity":1,"message":"172","line":20,"column":23,"nodeType":"168","messageId":"169","endLine":20,"endColumn":30},{"ruleId":"173","severity":1,"message":"174","line":29,"column":50,"nodeType":"175","endLine":29,"endColumn":59},{"ruleId":"166","severity":1,"message":"171","line":23,"column":9,"nodeType":"168","messageId":"169","endLine":23,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"166","severity":1,"message":"170","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":11},{"ruleId":"166","severity":1,"message":"171","line":15,"column":9,"nodeType":"168","messageId":"169","endLine":15,"endColumn":14},{"ruleId":"166","severity":1,"message":"172","line":18,"column":25,"nodeType":"168","messageId":"169","endLine":18,"endColumn":32},{"ruleId":"166","severity":1,"message":"172","line":20,"column":23,"nodeType":"168","messageId":"169","endLine":20,"endColumn":30},{"ruleId":"166","severity":1,"message":"171","line":23,"column":9,"nodeType":"168","messageId":"169","endLine":23,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":29,"column":50,"nodeType":"175","endLine":29,"endColumn":59},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'gql' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]